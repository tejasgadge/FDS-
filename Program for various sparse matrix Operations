#include <stdio.h> 
int main()  
{  
  int choice;
  jump :
  printf("\nEnter choice : ");
  printf("\n1.Show Three tuple for given matrix  ");
  printf("\n2.Show Transpose of given sparse  matrix ");
  printf("\n3.Add two sparse matrix  \n");
  scanf("%d",&choice);
  switch(choice)
  {
    case 1 :
        {
            int r1,c1;
            printf("\nEnter no of rows column for matrix A : ");
            scanf("%d %d",&r1,&c1); 
            int A[r1][c1];  
            printf("\nEnter elements : \n");
            for(int i=0;i<r1;i++)
            {
            for(int j=0;j<c1;j++)
            {
            scanf("%d",&A[i][j]);
            }
            }
            printf("\nR\tC\tV");
            for(int i=0;i<r1;i++)
             {
               for(int j=0;j<c1;j++)
               {
                 if(A[i][j]!=0)
                 {
                   printf("\n%d\t%d\t%d",i,j,A[i][j]);
                 }
               }

             }
             goto jump;
             break;
        }
    case 3 :
        {
             int a[10][3],b[10][3],r1,c1,v1,r2,c2,v2;
             printf("\nEnter no of rows ,column and values for 1st matrix : ");
             scanf("%d%d%d",&r1,&c1,&v1);
             a[0][0]=r1;
             a[0][1]=c1;
             a[0][2]=v1;
             for(int i=1;i<=v1;i++)
             {
               scanf("%d%d%d",&a[i][0],&a[i][1],&a[i][2]);
             }
             printf("\nEnter no of rows,column and values for 2nd matrix : ");
             scanf("%d%d%d",&r2,&c2,&v2);
             b[0][0]=r2;
             b[0][1]=c2;
             b[0][2]=v2;
             for(int i=1;i<=v2;i++)
             {
               scanf("%d%d%d",&b[i][0],&b[i][1],&b[i][2]);
             }
           int c[v1+v2][3];
           for(int i=0;i<v1+v2;i++)
             {
               c[i][0]=0;
               c[i][1]=0;
               c[i][2]=0;
             }
           if( a[0][0]== b[0][0] && a[0][1]==b[0][1])
           {
             int i=1,j=1,k=0;
             while(i<=v1 && j<=v2)
             {
               if(a[i][0]<b[j][0])
               {
                 c[k][0]=a[i][0];
                 c[k][1]=a[i][1];
                 c[k][2]=a[i][2];
                 k++;
                 i++;
               }
               else if(a[i][0]>b[j][0])
               {
                 c[k][0]=b[j][0];
                 c[k][1]=b[j][1];
                 c[k][2]=b[j][2];
                 k++;
                 j++;
               }
               else 
               {
                 if(a[i][1]<b[j][1])
               {
                 c[k][0]=a[i][0];
                 c[k][1]=a[i][1];
                 c[k][2]=a[i][2];
                 k++;
                 i++;
               }
               else if(a[i][1]>b[j][1])
               {
                 c[k][0]=b[j][0];
                 c[k][1]=b[j][1];
                 c[k][2]=b[j][2];
                 k++;
                 j++;
               } 
               else
               {
                 c[k][0]=a[i][0]+b[j][0];
                 c[k][1]=a[i][1]+b[j][1];
                 c[k][2]=a[i][2]+b[i][2];
                 k++;
                 i++;
                 j++;
               }
               }
             }
             for(;i<a[0][2];i++)
  {
    c[k][0]=a[i][0];
    c[k][1]=a[i][1];
    c[k][2]=a[i][2];
    k++;
  }

  for(;j<b[0][2];j++)
  {
    c[k][0]=b[j][0];
    c[k][1]=b[j][1];
    c[k][2]=b[j][2];
    k++;
  }
           }
           printf("\nR\tC\tV");
           for(int i=0;c[i][2]>0;i++)
           {
             printf("\n%d\t%d\t%d",c[i][0],c[i][1],c[i][2]);
           }
           goto jump;
           break;
           }
    case 2 :
           {
            int B[10][3], C[10][3],m,n,v,col,pos,total[10],index[10];
            printf("\nEnter no of rows ,column and values for  matrix : ");
            scanf("%d%d%d",&m,&n,&v);
            B[0][0]=m;
            B[0][1]=n;
            B[0][2]=v;
            for(int i=1;i<=v;i++)
            {
              scanf("%d%d%d",&B[i][0],&B[i][1],&B[i][2]);
            }
           // int i,j,m,n,pos[3]={0,0,0},count[3]={0,0,0};
           for(int i=0;i<n;i++)
           {
             total[i]=0;
           }
           for (int i=1;i<=v;i++)
            {
             col=B[i][1];
             total[col]++;
            }
            index[0] = 1;
            for (int i=1;i<=n;i++)
            {
              index[i] = index[i-1] + total[i-1];
            }
            C[0][0] = n;
            C[0][1] = m;
            C[0][2] = v;
            for (int i=1;i<=v;i++)
            {
             col= B[i][1];
             pos= index[col];
             index[col]++;
             C[pos][0] = B[i][1];
             C[pos][1] = B[i][0];
             C[pos][2] = B[i][2];
            }
           printf("\nTranspose of given matrix is : ");
           printf("\nR\tC\tV");
           for(int i=1;i<=v;i++)
           {
             printf("\n%d\t%d\t%d",C[i][0],C[i][1],C[i][2]);
           }
            goto jump;
          }
    default:
             break;
  }
}

